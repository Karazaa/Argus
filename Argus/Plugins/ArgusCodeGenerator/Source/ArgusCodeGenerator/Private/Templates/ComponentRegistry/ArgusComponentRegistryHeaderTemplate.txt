// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#pragma once

#include "ArgusECSConstants.h"
#include "ArgusLogging.h"
#include <bitset>
#include <unordered_map>

// Begin component specific includes.
@@@@@

// Begin dynamically allocated component specific includes.
^^^^^

class ArgusComponentRegistry
{
public:
	template<typename ArgusComponent>
	static ArgusComponent* GetComponent(uint16 entityId)
	{
		return nullptr;
	}

	template<typename ArgusComponent>
	static ArgusComponent* AddComponent(uint16 entityId)
	{
		return nullptr;
	}

	template<typename ArgusComponent>
	static ArgusComponent* GetOrAddComponent(uint16 entityId)
	{
		return nullptr;
	}

	static void RemoveComponentsForEntity(uint16 entityId);
	static void FlushAllComponents();
	static void AppendComponentDebugStrings(uint16 entityId, FString& debugStringToAppendTo);

	static constexpr uint32 k_numComponentTypes = %%%%%;

	// Begin component specific template specifiers.
	
	#####
	
	// Begin dynamically allocated component specific template specifiers.

	&&&&&
};