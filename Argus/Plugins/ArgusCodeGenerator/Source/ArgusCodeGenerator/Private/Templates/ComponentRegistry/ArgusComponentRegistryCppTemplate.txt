// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "ArgusComponentRegistry.h"

// Begin component specific definitions
@@@@@
^^^^^

void ArgusComponentRegistry::RemoveComponentsForEntity(uint16 entityId)
{
	if (entityId >= ArgusECSConstants::k_maxEntities)
	{
		UE_LOG(ArgusECSLog, Error, TEXT("[%s] Invalid entity id %d."), ARGUS_FUNCNAME, entityId);
		return;
	}

	// Begin set bitset bits to false
	*****

	// Begin set component values
	~~~~~

	// Begin remove dynamically allocated components
	?????
}

void ArgusComponentRegistry::FlushAllComponents()
{
	// Begin flush active component bitsets
	#####

	// Begin flush component values
	for (uint16 i = 0u; i < ArgusECSConstants::k_maxEntities; ++i)
	{
		$$$$$
	}

	// Begin flush dynamically allocated components
	&&&&&
}

void ArgusComponentRegistry::AppendComponentDebugStrings(uint16 entityId, FString& debugStringToAppendTo)
{
	%%%%%
}