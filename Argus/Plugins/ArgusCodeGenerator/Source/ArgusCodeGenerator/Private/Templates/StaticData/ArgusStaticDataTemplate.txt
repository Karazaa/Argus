// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#pragma once

#include "ArgusGameInstance.h"
#include "ArgusLogging.h"

#if WITH_EDITOR && !IS_PACKAGING_ARGUS
#include "Editor.h"
#include "Subsystems/EditorAssetSubsystem.h"
#endif //WITH_EDITOR && !IS_PACKAGING_ARGUS

class ArgusStaticData
{
public:
	template<typename ArgusStaticRecord>
	static const ArgusStaticRecord* GetRecord(uint32 id)
	{
		return nullptr;
	}

	template<typename ArgusStaticRecord>
	static const bool PreLoadRecord(uint32 id)
	{
		return false;
	}

#if WITH_EDITOR && !IS_PACKAGING_ARGUS
	static const uint32 AddRecordToDatabase(UArgusStaticRecord* record)
	{
		if (!GEditor)
		{
			return 0u;
		}

		UEditorAssetSubsystem* editorAssetSubsystem = GEditor->GetEditorSubsystem<UEditorAssetSubsystem>();
		const FString assetPath = FString(TEXT("/Game/StaticData/ArgusStaticDatabase.ArgusStaticDatabase"));
		UArgusStaticDatabase* staticDatabase = Cast<UArgusStaticDatabase>(editorAssetSubsystem->LoadAsset(assetPath));

		if (!staticDatabase)
		{
			return 0u;
		}
		
		$$$$$

		return 0u;
	}
#endif //WITH_EDITOR && !IS_PACKAGING_ARGUS
@@@@@

#if WITH_EDITOR && !IS_PACKAGING_ARGUS
private:
	static UArgusStaticDatabase* GetParentDatabase()
	{
		if (!GEditor)
		{
			return nullptr;
		}

		UEditorAssetSubsystem* editorAssetSubsystem = GEditor->GetEditorSubsystem<UEditorAssetSubsystem>();
		if (!editorAssetSubsystem)
		{
			return nullptr;
		}

		return Cast<UArgusStaticDatabase>(editorAssetSubsystem->LoadAsset(FString("/Game/StaticData/ArgusStaticDatabase.ArgusStaticDatabase")));
	}
#endif //WITH_EDITOR && !IS_PACKAGING_ARGUS
};