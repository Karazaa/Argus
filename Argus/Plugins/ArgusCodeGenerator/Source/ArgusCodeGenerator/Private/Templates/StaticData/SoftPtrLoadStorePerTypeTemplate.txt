class #####;

USTRUCT(BlueprintType)
struct FSoftPtrLoadStore_#####
{
	GENERATED_BODY()

public:
	#####* LoadAndStorePtr() const
	{
		if (m_hardPtr)
		{
			return m_hardPtr.Get();
		}

		m_hardPtr = m_softPtr.LoadSynchronous();
		return m_hardPtr.Get();
	}

	void SetHardPtr(#####* pointer)
	{
		m_hardPtr = pointer;
	};

	operator bool() const { return m_hardPtr || !m_softPtr.IsNull(); }

protected:
	UPROPERTY(EditAnywhere, BlueprintReadOnly)
	TSoftObjectPtr<#####> m_softPtr = nullptr;

	UPROPERTY(Transient)
	mutable TObjectPtr<#####> m_hardPtr = nullptr;
};