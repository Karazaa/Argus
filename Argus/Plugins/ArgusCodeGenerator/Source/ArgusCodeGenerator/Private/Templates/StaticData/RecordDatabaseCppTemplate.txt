// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

$$$$$
#include "ArgusLogging.h"
#include "ArgusMacros.h"

const #####* #####Database::GetRecord(uint32 id)
{
	if (static_cast<uint32>(m_#####sPersistent.Num()) <= id)
	{
		UE_LOG
		(
			ArgusStaticDataLog, Error,
			TEXT("[%s] Could not find %s %d in %s."),
			ARGUS_FUNCNAME,
			ARGUS_NAMEOF(id),
			id,
			ARGUS_NAMEOF(#####Database)
		);

		return nullptr;
	}

	if (id == 0u)
	{
		return nullptr;
	}

	if (!m_#####sPersistent[id])
	{
		m_#####sPersistent[id] = m_#####s[id].LoadSynchronous();
	}

	if (m_#####sPersistent[id])
	{
		m_#####sPersistent[id]->m_id = id;
	}

	return m_#####sPersistent[id];
}

const uint32 #####Database::GetIdFromRecordSoftPtr(const TSoftObjectPtr<#####>& #####) const
{
	for (int i = 0; i < m_#####s.Num(); ++i)
	{
		if (m_#####s[i] == #####)
		{
			return i;
		}
	}

	return 0u;
}

void #####Database::ResizePersistentObjectPointerArray()
{
	m_#####sPersistent.SetNumZeroed(m_#####s.Num());
}