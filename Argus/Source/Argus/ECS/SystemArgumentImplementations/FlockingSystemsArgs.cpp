// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "SystemArgumentDefinitions\FlockingSystemsArgs.h"
#include "ArgusLogging.h"

bool FlockingSystemsArgs::PopulateArguments(const ArgusEntity& entity)
{
	if (UNLIKELY(!entity))
	{
		return false;
	}

	m_entity = entity;
	m_taskComponent = entity.GetComponent<TaskComponent>();
	m_transformComponent = entity.GetComponent<TransformComponent>();
	m_avoidanceGroupingComponent = entity.GetComponent<AvoidanceGroupingComponent>();
	m_flockingComponent = entity.GetComponent<FlockingComponent>();
	m_targetingComponent = entity.GetComponent<TargetingComponent>();

	if (!m_entity || !m_taskComponent || !m_transformComponent || !m_avoidanceGroupingComponent || !m_flockingComponent || !m_targetingComponent)
	{
		return false;
	}

	return true;
}

bool FlockingSystemsArgs::AreComponentsValidCheck(const WIDECHAR* functionName) const
{
	if (UNLIKELY(!m_entity || !m_taskComponent || !m_transformComponent || !m_avoidanceGroupingComponent || !m_flockingComponent || !m_targetingComponent))
	{
		ArgusLogging::LogInvalidComponentReferences(functionName, ARGUS_NAMEOF(FlockingSystemsArgs));
		return false;
	}

	return true;
}
