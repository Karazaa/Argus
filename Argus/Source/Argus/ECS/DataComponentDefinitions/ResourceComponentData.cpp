// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "ResourceComponentData.h"
#include "ArgusLogging.h"
#include "ArgusStaticData.h"

void UResourceComponentData::InstantiateComponentForEntity(const ArgusEntity& entity) const
{
	ResourceComponent* ResourceComponentRef = entity.GetOrAddComponent<ResourceComponent>();
	ARGUS_RETURN_ON_NULL(ResourceComponentRef, ArgusECSLog);

	ResourceComponentRef->m_currentResources = m_currentResources;
	ResourceComponentRef->m_resourceCapacityRecordId = m_resourceCapacityRecordId.LoadSynchronous() ? m_resourceCapacityRecordId.LoadSynchronous()->m_id : 0u;
	ResourceComponentRef->m_resourceComponentOwnerType = m_resourceComponentOwnerType;
}

bool UResourceComponentData::MatchesType(UComponentData* other) const
{
	if (!other)
	{
		return false;
	}

	const UResourceComponentData* otherComponentData = Cast<UResourceComponentData>(other);
	if (!otherComponentData)
	{
		return false;
	}

	return true;
}
