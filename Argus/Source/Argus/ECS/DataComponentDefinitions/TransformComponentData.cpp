// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "TransformComponentData.h"
#include "ArgusLogging.h"
#include "ArgusStaticData.h"

void UTransformComponentData::InstantiateComponentForEntity(const ArgusEntity& entity) const
{
	TransformComponent* TransformComponentRef = entity.GetOrAddComponent<TransformComponent>();
	ARGUS_RETURN_ON_NULL(TransformComponentRef, ArgusECSLog);

	TransformComponentRef->m_smoothedYaw = ArgusMath::ExponentialDecaySmoother<float>(m_smoothedYawDecayConstant);
	TransformComponentRef->m_smoothedTransitionAltitude = ArgusMath::ExponentialDecaySmoother<float>(m_smoothedTransitionAltitudeDecayConstant);
	TransformComponentRef->m_radius = m_radius;
	TransformComponentRef->m_flightCapability = m_flightCapability;
}

bool UTransformComponentData::MatchesType(UComponentData* other) const
{
	if (!other)
	{
		return false;
	}

	const UTransformComponentData* otherComponentData = Cast<UTransformComponentData>(other);
	if (!otherComponentData)
	{
		return false;
	}

	return true;
}
