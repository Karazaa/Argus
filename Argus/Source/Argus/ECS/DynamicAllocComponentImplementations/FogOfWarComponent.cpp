// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "DynamicAllocComponentDefinitions/FogOfWarComponent.h"
#include "ArgusEntity.h"
#include "ArgusLogging.h"

#if !UE_BUILD_SHIPPING
#include "ArgusStaticData.h"
#include "imgui.h"
#include "UObject/ReflectedTypeAccessors.h"
#endif //!UE_BUILD_SHIPPING

// Component shared functionality
void FogOfWarComponent::Reset()
{
	m_fogOfWarTexture = nullptr;
	m_dynamicMaterialInstance = nullptr;
	m_textureData.Reset();
	m_textureSize = 1024u;
}

void FogOfWarComponent::DrawComponentDebug() const
{
#if !UE_BUILD_SHIPPING
	if (!ImGui::CollapsingHeader("FogOfWarComponent"))
	{
		return;
	}

	if (ImGui::BeginTable("ComponentValues", 2, ImGuiTableFlags_NoSavedSettings))
	{
		ImGui::TableNextColumn();
		ImGui::Text("m_fogOfWarTexture");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_dynamicMaterialInstance");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_textureRegion");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_textureRegionsUpdateData");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_textureData");
		ImGui::TableNextColumn();
		ImGui::Text("Array max is currently = %d", m_textureData.Max());
		if (m_textureData.Num() == 0)
		{
			ImGui::Text("Array is empty");
		}
		else
		{
			ImGui::Text("Size of array = %d", m_textureData.Num());
			for (int32 i = 0; i < m_textureData.Num(); ++i)
			{
				ImGui::Text("%d", m_textureData[i]);
			}
		}
		ImGui::TableNextColumn();
		ImGui::Text("m_textureSize");
		ImGui::TableNextColumn();
		ImGui::Text("%d", m_textureSize);
		ImGui::EndTable();
	}
#endif //!UE_BUILD_SHIPPING
}
