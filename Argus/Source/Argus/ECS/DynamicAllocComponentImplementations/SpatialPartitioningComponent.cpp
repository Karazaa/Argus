// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "DynamicAllocComponentDefinitions/SpatialPartitioningComponent.h"
#include "ArgusEntity.h"
#include "ArgusLogging.h"

#if !UE_BUILD_SHIPPING
#include "ArgusStaticData.h"
#include "imgui.h"
#include "UObject/ReflectedTypeAccessors.h"
#endif //!UE_BUILD_SHIPPING

// Component shared functionality
void SpatialPartitioningComponent::Reset()
{
	m_argusEntityKDTree.FlushAllNodes();
	m_flyingArgusEntityKDTree.FlushAllNodes();
	m_obstaclePointKDTree.FlushAllNodes();
	m_obstacles.Reset();
	m_validSpaceExtent = 3000.0f;
	m_flyingPlaneHeight = 300.0f;
}

void SpatialPartitioningComponent::DrawComponentDebug() const
{
#if !UE_BUILD_SHIPPING
	if (!ImGui::CollapsingHeader("SpatialPartitioningComponent"))
	{
		return;
	}

	if (ImGui::BeginTable("ComponentValues", 2, ImGuiTableFlags_NoSavedSettings))
	{
		ImGui::TableNextColumn();
		ImGui::Text("m_argusEntityKDTree");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_flyingArgusEntityKDTree");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_obstaclePointKDTree");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_obstacles");
		ImGui::TableNextColumn();
		ImGui::Text("Array max is currently = %d", m_obstacles.Max());
		if (m_obstacles.Num() == 0)
		{
			ImGui::Text("Array is empty");
		}
		else
		{
			ImGui::Text("Size of array = %d", m_obstacles.Num());
			for (int32 i = 0; i < m_obstacles.Num(); ++i)
			{
			}
		}
		ImGui::TableNextColumn();
		ImGui::Text("m_validSpaceExtent");
		ImGui::TableNextColumn();
		ImGui::Text("%.2f", m_validSpaceExtent);
		ImGui::TableNextColumn();
		ImGui::Text("m_flyingPlaneHeight");
		ImGui::TableNextColumn();
		ImGui::Text("%.2f", m_flyingPlaneHeight);
		ImGui::EndTable();
	}
#endif //!UE_BUILD_SHIPPING
}
