// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "ComponentDefinitions/TaskComponent.h"
#include "ArgusComponentRegistry.h"

#if !UE_BUILD_SHIPPING
#include "imgui.h"
#endif //!UE_BUILD_SHIPPING

// Component shared functionality
uint16 TaskComponent::GetOwningEntityId() const
{
	return this - &ArgusComponentRegistry::s_TaskComponents[0];
}

void TaskComponent::DrawComponentDebug() const
{
#if !UE_BUILD_SHIPPING
	if (!ImGui::CollapsingHeader("TaskComponent"))
	{
		return;
	}

	if (ImGui::BeginTable("ComponentValues", 2, ImGuiTableFlags_NoSavedSettings))
	{
		ImGui::TableNextColumn();
		ImGui::Text("m_spawnedFromArgusActorRecordId");
		ImGui::TableNextColumn();
		ImGui::Text("%d", m_spawnedFromArgusActorRecordId);
		ImGui::TableNextColumn();
		ImGui::Text("m_baseState");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_movementState");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_spawningState");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_abilityState");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_constructionState");
		ImGui::TableNextColumn();
		ImGui::TableNextColumn();
		ImGui::Text("m_combatState");
		ImGui::TableNextColumn();
		ImGui::EndTable();
	}
#endif //!UE_BUILD_SHIPPING
}

// Per observable logic
void TaskComponent::Set_m_baseState(BaseState newValue)
{
	BaseState oldValue = m_baseState;
	m_baseState = newValue;

	ObserversComponent* observersComponent = ArgusComponentRegistry::GetComponent<ObserversComponent>(GetOwningEntityId());
	if (!observersComponent)
	{
		// TODO JAMES: error here.
		return;
	}

	observersComponent->m_TaskComponentObservers.OnChanged_m_baseState(oldValue, newValue);
}
