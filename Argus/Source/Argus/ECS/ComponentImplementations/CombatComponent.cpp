// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "ComponentDefinitions/CombatComponent.h"
#include "ArgusComponentRegistry.h"

#if !UE_BUILD_SHIPPING
#include "imgui.h"
#include "UObject/ReflectedTypeAccessors.h"
#endif //!UE_BUILD_SHIPPING

// Component shared functionality
uint16 CombatComponent::GetOwningEntityId() const
{
	return this - &ArgusComponentRegistry::s_CombatComponents[0];
}

void CombatComponent::DrawComponentDebug() const
{
#if !UE_BUILD_SHIPPING
	if (!ImGui::CollapsingHeader("CombatComponent"))
	{
		return;
	}

	if (ImGui::BeginTable("ComponentValues", 2, ImGuiTableFlags_NoSavedSettings))
	{
		ImGui::TableNextColumn();
		ImGui::Text("m_baseDamagePerIntervalOrPerSecond");
		ImGui::TableNextColumn();
		ImGui::Text("%d", m_baseDamagePerIntervalOrPerSecond);
		ImGui::TableNextColumn();
		ImGui::Text("m_intervalDurationSeconds");
		ImGui::TableNextColumn();
		ImGui::Text("%f", m_intervalDurationSeconds);
		ImGui::TableNextColumn();
		ImGui::Text("m_attackType");
		ImGui::TableNextColumn();
		const char* valueNamem_attackType = ARGUS_FSTRING_TO_CHAR(StaticEnum<EAttackType>()->GetNameStringByValue(static_cast<uint8>(m_attackType)));
		ImGui::Text(valueNamem_attackType);
		ImGui::TableNextColumn();
		ImGui::Text("m_attackTimerHandle");
		ImGui::TableNextColumn();
		ImGui::EndTable();
	}
#endif //!UE_BUILD_SHIPPING
}

// Per observable logic
