// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "ComponentDefinitions/PassengerComponent.h"
#include "ArgusEntity.h"
#include "ArgusLogging.h"

#if !UE_BUILD_SHIPPING
#include "ArgusStaticData.h"
#include "imgui.h"
#include "UObject/ReflectedTypeAccessors.h"
#endif //!UE_BUILD_SHIPPING

// Component shared functionality
uint16 PassengerComponent::GetOwningEntityId() const
{
	return this - &ArgusComponentRegistry::s_PassengerComponents[0];
}

void PassengerComponent::Reset()
{
	m_carrierEntityId = ArgusECSConstants::k_maxEntities;
}

void PassengerComponent::DrawComponentDebug() const
{
#if !UE_BUILD_SHIPPING
	if (!ImGui::CollapsingHeader("PassengerComponent"))
	{
		return;
	}

	if (ImGui::BeginTable("ComponentValues", 2, ImGuiTableFlags_NoSavedSettings))
	{
		ImGui::TableNextColumn();
		ImGui::Text("m_carrierEntityId");
		ImGui::TableNextColumn();
		ImGui::Text("%d", m_carrierEntityId);
		ImGui::EndTable();
	}
#endif //!UE_BUILD_SHIPPING
}

// Per observable logic
void PassengerComponent::Set_m_carrierEntityId(uint16 newValue)
{
	uint16 oldValue = m_carrierEntityId;
	m_carrierEntityId = newValue;

	ObserversComponent* observersComponent = ArgusComponentRegistry::GetComponent<ObserversComponent>(GetOwningEntityId());
	ARGUS_RETURN_ON_NULL(observersComponent, ArgusECSLog);
	observersComponent->m_PassengerComponentObservers.OnChanged_m_carrierEntityId(oldValue, newValue);
}
