// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "ComponentDefinitions/ConstructionComponent.h"
#include "ArgusEntity.h"
#include "ArgusLogging.h"

#if !UE_BUILD_SHIPPING
#include "ArgusStaticData.h"
#include "imgui.h"
#include "UObject/ReflectedTypeAccessors.h"
#endif //!UE_BUILD_SHIPPING

// Component shared functionality
uint16 ConstructionComponent::GetOwningEntityId() const
{
	return this - &ArgusComponentRegistry::s_ConstructionComponents[0];
}

void ConstructionComponent::Reset()
{
	m_requiredWorkSeconds = 0.0f;
	m_currentWorkSeconds = 0.0f;
	m_constructionAbilityRecordId = 0u;
	m_constructionType = EConstructionType::Automatic;
}

void ConstructionComponent::DrawComponentDebug() const
{
#if !UE_BUILD_SHIPPING
	if (!ImGui::CollapsingHeader("ConstructionComponent"))
	{
		return;
	}

	if (ImGui::BeginTable("ComponentValues", 2, ImGuiTableFlags_NoSavedSettings))
	{
		ImGui::TableNextColumn();
		ImGui::Text("m_requiredWorkSeconds");
		ImGui::TableNextColumn();
		ImGui::Text("%.2f", m_requiredWorkSeconds);
		ImGui::TableNextColumn();
		ImGui::Text("m_currentWorkSeconds");
		ImGui::TableNextColumn();
		ImGui::Text("%.2f", m_currentWorkSeconds);
		ImGui::TableNextColumn();
		ImGui::Text("m_constructionAbilityRecordId");
		ImGui::TableNextColumn();
		if (m_constructionAbilityRecordId != 0u)
		{
			if (const UAbilityRecord* record_m_constructionAbilityRecordId = ArgusStaticData::GetRecord<UAbilityRecord>(m_constructionAbilityRecordId))
			{
				const char* name_m_constructionAbilityRecordId = ARGUS_FSTRING_TO_CHAR(record_m_constructionAbilityRecordId->GetName());
				ImGui::Text("%s", name_m_constructionAbilityRecordId);
			}
		}
		else
		{
			ImGui::Text("None");
		}
		ImGui::TableNextColumn();
		ImGui::Text("m_constructionType");
		ImGui::TableNextColumn();
		const char* valueName_m_constructionType = ARGUS_FSTRING_TO_CHAR(StaticEnum<EConstructionType>()->GetNameStringByValue(static_cast<uint8>(m_constructionType)))
		ImGui::Text(valueName_m_constructionType);
		ImGui::TableNextColumn();
		ImGui::Text("m_automaticConstructionTimerHandle");
		ImGui::TableNextColumn();
		const ArgusEntity owningEntity = ArgusEntity::RetrieveEntity(GetOwningEntityId());
		if (m_automaticConstructionTimerHandle.IsTimerTicking(owningEntity))
		{
			ImGui::Text("%.2f", m_automaticConstructionTimerHandle.GetTimeRemaining(owningEntity));
			ImGui::SameLine();
			ImGui::ProgressBar(m_automaticConstructionTimerHandle.GetTimeElapsedProportion(owningEntity));
		}
		else if (m_automaticConstructionTimerHandle.IsTimerComplete(owningEntity))
		{
			ImGui::Text("Timer complete");
		}
		else
		{
			ImGui::Text("Not set");
		}
		ImGui::EndTable();
	}
#endif //!UE_BUILD_SHIPPING
}

// Per observable logic
