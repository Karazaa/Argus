// Copyright Karazaa. This is a part of an RTS project called Argus.
// AUTOGENERATED FILE

#include "ArgusStaticDatabase.h"

#pragma region UFactionRecord
const UFactionRecord* UArgusStaticDatabase::GetUFactionRecord(uint32 id) const
{
	const UFactionRecordDatabase* UFactionRecordDatabase = m_UFactionRecordDatabase.LoadSynchronous();
	if (!UFactionRecordDatabase)
	{
		UE_LOG
		(
			ArgusStaticDataLog, Error,
			TEXT("[%s] Could not retrieve %s. %s might not be properly assigned."),
			ARGUS_FUNCNAME,
			ARGUS_NAMEOF(UFactionRecordDatabase),
			ARGUS_NAMEOF(m_UFactionRecordDatabase)
		);
		return nullptr;
	}

	return UFactionRecordDatabase->GetRecord(id);
}

const uint32 UArgusStaticDatabase::GetIdFromRecordSoftPtr(const TSoftObjectPtr<UFactionRecord>& UFactionRecord) const
{
	const UFactionRecordDatabase* UFactionRecordDatabase = m_UFactionRecordDatabase.LoadSynchronous();
	if (!UFactionRecordDatabase)
	{
		UE_LOG
		(
			ArgusStaticDataLog, Error,
			TEXT("[%s] Could not retrieve %s. %s might not be properly assigned."),
			ARGUS_FUNCNAME,
			ARGUS_NAMEOF(UFactionRecordDatabase),
			ARGUS_NAMEOF(m_UFactionRecordDatabase)
		);
		return 0u;
	}

	return UFactionRecordDatabase->GetIdFromRecordSoftPtr(UFactionRecord);
}
#pragma endregion
